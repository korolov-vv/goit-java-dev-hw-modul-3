-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE public.companies
(
    company_id integer NOT NULL,
    company_name character varying(255),
    number_of_developers integer,
    customer_id integer,
    project_id integer,
    PRIMARY KEY (company_id)
);

CREATE TABLE public.customers
(
    customer_id integer NOT NULL,
    customer_name character varying(255),
    project_id integer,
    PRIMARY KEY (customer_id)
);

CREATE TABLE public.developers
(
    developer_id integer NOT NULL,
    first_name character varying(20),
    last_name character varying(25) NOT NULL,
    gender character varying(25) NOT NULL,
    age integer,
    experience_in_years integer NOT NULL,
    company_id integer NOT NULL,
    project_id integer NOT NULL,
    PRIMARY KEY (developer_id)
);

CREATE TABLE public.projects
(
    project_id integer NOT NULL,
    developer_id integer,
    company_id integer,
    customer_id integer,
    project_name character varying(255),
    stage character varying(50),
    time_period integer,
    coast integer,
    PRIMARY KEY (project_id)
);

CREATE TABLE public.skills
(
	skill_id integer not null,
	developer_id integer NOT NULL,
    stack character varying(255) NOT NULL,
    seniority character varying(50) NOT NULL,
    PRIMARY KEY (skill_id)
);

ALTER TABLE public.companies
    ADD FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id)
    NOT VALID;


ALTER TABLE public.companies
    ADD FOREIGN KEY (project_id)
    REFERENCES public.projects (project_id)
    NOT VALID;


ALTER TABLE public.customers
    ADD FOREIGN KEY (project_id)
    REFERENCES public.projects (project_id)
    NOT VALID;


ALTER TABLE public.developers
    ADD FOREIGN KEY (company_id)
    REFERENCES public.companies (company_id)
    NOT VALID;


ALTER TABLE public.developers
    ADD FOREIGN KEY (project_id)
    REFERENCES public.projects (project_id)
    NOT VALID;


ALTER TABLE public.projects
    ADD FOREIGN KEY (company_id)
    REFERENCES public.companies (company_id)
    NOT VALID;


ALTER TABLE public.projects
    ADD FOREIGN KEY (developer_id)
    REFERENCES public.developers (developer_id)
    NOT VALID;

ALTER TABLE public.projects
    ADD FOREIGN KEY (developer_id)
    REFERENCES public.skills (developer_id)
    NOT VALID;


ALTER TABLE public.projects
    ADD FOREIGN KEY (developer_id)
    REFERENCES public.developers (developer_id)
    NOT VALID;


ALTER TABLE public.skills
    ADD FOREIGN KEY (developer_id)
    REFERENCES public.developers (developer_id)
    NOT VALID;
	
CREATE TABLE customers_and_companies
(
   customer_id int NOT NULL,
   company_id int NOT NULL,
   project_id int NOT NULL,
   FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
   FOREIGN KEY (company_id) REFERENCES companies(company_id),
   FOREIGN KEY (project_id) REFERENCES projects(project_id),
   UNIQUE (customer_id, company_id, project_id)
);

CREATE TABLE developers_on_projects
(
   project_id int NOT NULL,
   developer_id int NOT NULL,
   FOREIGN KEY (project_id) REFERENCES projects(project_id),
   FOREIGN KEY (developer_id) REFERENCES developers(developer_id),
   UNIQUE (project_id, developer_id)
);

CREATE TABLE skills_of_developers
(
   skill_id int NOT NULL,
   developer_id int NOT NULL,
   FOREIGN KEY (skill_id) REFERENCES skills (skill_id),
   FOREIGN KEY (developer_id) REFERENCES developers(developer_id),
   UNIQUE (skill_id, developer_id)
);



END;